version: '3.8'

services:
  # ===================================================================
  #  백엔드 서비스 (Spring Boot)
  # ===================================================================
  backend:
    image: hy7012/pls-jober-backend:latest
    container_name: pls-jober-backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    env_file:
      - .env
    depends_on:
      - mysql
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ===================================================================
  #  AI 서비스 (FastAPI)
  # ===================================================================
  ai-service:
    build:
      context: ./ai
      dockerfile: Dockerfile
    container_name: pls-jober-ai
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
    env_file:
      - .env
    volumes:
      - ./ai/chroma_db:/app/chroma_db
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ===================================================================
  #  MySQL 데이터베이스
  # ===================================================================
  mysql:
    image: mysql:8.0
    container_name: pls-jober-mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./back/src/main/resources/db/migration:/docker-entrypoint-initdb.d
    networks:
      - app-network
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password

  # ===================================================================
  #  Redis 캐시 서버
  # ===================================================================
  redis:
    image: redis:7-alpine
    container_name: pls-jober-redis
    ports:
      - "6379:6379"
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - app-network
    restart: unless-stopped

  # ===================================================================
  #  Nginx 리버스 프록시
  # ===================================================================
  nginx:
    image: nginx:alpine
    container_name: pls-jober-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - /var/www/frontend/dist:/var/www/html
    depends_on:
      - backend
      - ai-service
    networks:
      - app-network
    restart: unless-stopped

volumes:
  mysql_data:
  redis_data:

networks:
  app-network:
    driver: bridge
