name: Deploy Frontend to Oracle Cloud

on:
  push:
    branches: [ deploy ]
  pull_request:
    branches: [ deploy ]
    types: [closed]

jobs:
  deploy:
    # PR이 merge되었을 때만 실행
    if: github.event.pull_request.merged == true || github.ref == 'refs/heads/deploy'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: front/package-lock.json
        
    - name: Install dependencies
      working-directory: ./front
      run: npm ci
      
    - name: Run type check
      working-directory: ./front
      run: npm run type-check
      
    - name: Run linter
      working-directory: ./front
      run: npm run lint || echo "ESLint warnings/errors found but continuing deployment"
      
    - name: Build application
      working-directory: ./front
      run: npm run build
      
    - name: Deploy to Oracle Cloud Server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: 134.185.106.160
        username: ubuntu
        key: ${{ secrets.SSH_PRIVATE }}
        port: 22
        script: |
          # 배포 디렉토리 생성
          sudo mkdir -p /var/www/frontend
          sudo chown -R $USER:$USER /var/www/frontend
          
          # 기존 파일 백업
          if [ -d "/var/www/frontend/backup" ]; then
            sudo rm -rf /var/www/frontend/backup
          fi
          if [ -d "/var/www/frontend/dist" ]; then
            sudo mv /var/www/frontend/dist /var/www/frontend/backup
          fi
          
          # 새로운 배포 디렉토리 생성
          mkdir -p /var/www/frontend/dist
          
    - name: Copy build files to server
      uses: appleboy/scp-action@v0.1.7
      with:
        host: 134.185.106.160
        username: ubuntu
        key: ${{ secrets.SSH_PRIVATE }}
        port: 22
        source: "front/dist/*"
        target: "/var/www/frontend/"
        strip_components: 2
        
    - name: Setup Nginx (if not already configured)
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: 134.185.106.160
        username: ubuntu
        key: ${{ secrets.SSH_PRIVATE }}
        port: 22
        script: |
          # Nginx 설치 (이미 설치되어 있으면 스킵)
          if ! command -v nginx &> /dev/null; then
            sudo apt update
            sudo apt install -y nginx
          fi
          
          # Nginx 설정 파일 생성
          sudo tee /etc/nginx/sites-available/frontend > /dev/null <<EOF
          server {
              listen 80;
              server_name 134.185.106.160;
              
              root /var/www/frontend/dist;
              index index.html;
              
              location / {
                  try_files \$uri \$uri/ /index.html;
              }
              
              # 정적 파일 캐싱
              location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
                  expires 1y;
                  add_header Cache-Control "public, immutable";
              }
          }
          EOF
          
          # 사이트 활성화
          sudo ln -sf /etc/nginx/sites-available/frontend /etc/nginx/sites-enabled/
          
          # 기본 사이트 비활성화
          sudo rm -f /etc/nginx/sites-enabled/default
          
          # Nginx 설정 테스트 및 재시작
          sudo nginx -t && sudo systemctl reload nginx
          sudo systemctl enable nginx
          
    - name: Deployment Status
      run: |
        echo "🚀 Deployment completed successfully!"
        echo "🌐 Frontend is now live at: http://134.185.106.160"